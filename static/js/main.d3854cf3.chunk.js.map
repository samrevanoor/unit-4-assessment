{"version":3,"sources":["components/CircleSelector/CircleSelector.jsx","components/Circles/Circles.jsx","App.js","reportWebVitals.js","index.js"],"names":["CircleSelector","props","className","map","button","circle","onClick","handleButtonClick","value","Circles","App","setState","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTA0BeA,MAvBf,SAAwBC,GAGtB,OACE,qBAAKC,UAAU,iBAAf,SAHc,CAAC,EAAG,EAAG,EAAG,GAIbC,KAAI,SAACC,GACZ,OACE,wBACEF,UAAWD,EAAMI,SAAWD,EAAS,WAAa,GAClDE,QAAS,kBAAML,EAAMM,kBAAkBH,IAEvCI,MAAOJ,EAJT,SAMGH,EAAMI,SAAWD,EAAjB,iBACaA,EADb,qCAEoBA,IALhBA,S,MCSFK,MAnBf,SAAiBR,GAGf,OACE,qBAAKC,UAAU,UAAf,SAHc,CAAC,EAAG,EAAG,EAAG,GAIbC,KAAI,SAACC,GACZ,OACE,qBACEF,UAAWD,EAAMI,SAAWD,EAAS,WAAa,GADpD,SAIGA,GAFIA,SCsBFM,E,kDA5Bb,aAAe,IAAD,8BACZ,gBAMFH,kBAAoB,SAACH,GACnB,EAAKO,SAAS,CACZN,OAAQD,KAPV,EAAKQ,MAAQ,CACXP,OAAQ,GAHE,E,0CAcd,WAAU,IACAA,EAAWQ,KAAKD,MAAhBP,OACR,OACE,sBAAKH,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CAAgBG,OAAQA,EAAQE,kBAAmBM,KAAKN,oBAAqB,IAC7E,cAAC,EAAD,CAASF,OAAQA,c,GAtBTS,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3854cf3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./CircleSelector.css\";\n\nfunction CircleSelector(props) {\n  const buttons = [1, 2, 3, 4];\n\n  return (\n    <div className=\"CircleSelector\">\n      {buttons.map((button) => {\n        return (\n          <button\n            className={props.circle === button ? \"selected\" : \"\"}\n            onClick={() => props.handleButtonClick(button)}\n            key={button}\n            value={button}\n          >\n            {props.circle === button\n              ? `CIRCLE ${button} SELECTED`\n              : `SELECT CIRCLE ${button}`}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default CircleSelector;\n","import React from \"react\";\nimport \"./Circles.css\";\n\nfunction Circles(props) {\n  const buttons = [1, 2, 3, 4];\n\n  return (\n    <div className=\"Circles\">\n      {buttons.map((button) => {\n        return (\n          <div\n            className={props.circle === button ? \"selected\" : \"\"}\n            key={button}\n          >\n            {button}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Circles;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CircleSelector from \"./components/CircleSelector/CircleSelector\";\nimport Circles from \"./components/Circles/Circles\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      circle: 1,\n    };\n  }\n\n  handleButtonClick = (button) => {\n    this.setState({\n      circle: button\n    });\n  }\n\n\n  render() {\n    const { circle } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector circle={circle} handleButtonClick={this.handleButtonClick}/>{\" \"}\n          <Circles circle={circle}/>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}